#!/usr/bin/env ruby

require 'bundler/setup'
require 'sinatra'
require 'json'

ALL_MITTENS = {}

# Demonstration implementation of an external API server to be wrapped
class SampleApiServer < Sinatra::Base
  # Index of all currently registered mittens
  # curl "http://localhost:9020/v1/mittens"
  get '/v1/mittens' do
    request_processing_delay

    json(ALL_MITTENS)
  end

  # Show all details for a single mitten
  # curl "http://localhost:9020/v1/mittens/bobsled"
  get '/v1/mittens/:name' do |name|
    request_processing_delay

    mitten_color = ALL_MITTENS[name]

    if mitten_color
      [200, json(
        'name' => name,
        'color' => mitten_color
      )]
    else
      [404, json(
        'status' => 'error',
        'message' => 'key_not_found_error'
      )]
    end
  end

  # Register a new mitten under :name. Note the name has to be unique,
  # and the :color parameter is required.
  #
  # Sample invocation:
  #   name: left_hand
  #   color: red
  #   curl -X POST -d '' "http://localhost:9020/v1/mittens/left_hand?color=red"
  post '/v1/mittens/:name' do |name|
    request_processing_delay

    if ALL_MITTENS.key?(name)
      halt [
        409,
        json(
          'status' => 'error',
          'message' => 'duplicate_key_error'
        )
      ]
    end

    ALL_MITTENS[name] = params.fetch('color')
    [201, json('status' => 'ok')]
  end

  private

  def json(payload)
    JSON.dump(payload)
  end

  def request_processing_delay
    warn 'Processing request..'
    sleep 1
    warn 'Processing done'
  end
end

use SampleApiServer
